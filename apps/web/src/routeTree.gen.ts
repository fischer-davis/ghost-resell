/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedPostsRouteImport } from './routes/_authenticated/posts'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedApiKeysRouteImport } from './routes/_authenticated/api-keys'
import { Route as AuthenticatedSettingsProfileRouteImport } from './routes/_authenticated/settings/profile'
import { Route as AuthenticatedSettingsApiKeysRouteImport } from './routes/_authenticated/settings/api-keys'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/_authenticated/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedPostsRoute = AuthenticatedPostsRouteImport.update({
  id: '/_authenticated/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/_authenticated/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedApiKeysRoute = AuthenticatedApiKeysRouteImport.update({
  id: '/_authenticated/api-keys',
  path: '/api-keys',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsProfileRoute =
  AuthenticatedSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedSettingsApiKeysRoute =
  AuthenticatedSettingsApiKeysRouteImport.update({
    id: '/api-keys',
    path: '/api-keys',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/api-keys': typeof AuthenticatedApiKeysRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/posts': typeof AuthenticatedPostsRoute
  '/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/settings/api-keys': typeof AuthenticatedSettingsApiKeysRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/api-keys': typeof AuthenticatedApiKeysRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/posts': typeof AuthenticatedPostsRoute
  '/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/settings/api-keys': typeof AuthenticatedSettingsApiKeysRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/_authenticated/api-keys': typeof AuthenticatedApiKeysRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/posts': typeof AuthenticatedPostsRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/_authenticated/settings/api-keys': typeof AuthenticatedSettingsApiKeysRoute
  '/_authenticated/settings/profile': typeof AuthenticatedSettingsProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/api-keys'
    | '/dashboard'
    | '/posts'
    | '/settings'
    | '/settings/api-keys'
    | '/settings/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/api-keys'
    | '/dashboard'
    | '/posts'
    | '/settings'
    | '/settings/api-keys'
    | '/settings/profile'
  id:
    | '__root__'
    | '/'
    | '/signin'
    | '/signup'
    | '/_authenticated/api-keys'
    | '/_authenticated/dashboard'
    | '/_authenticated/posts'
    | '/_authenticated/settings'
    | '/_authenticated/settings/api-keys'
    | '/_authenticated/settings/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  AuthenticatedApiKeysRoute: typeof AuthenticatedApiKeysRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedPostsRoute: typeof AuthenticatedPostsRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/posts': {
      id: '/_authenticated/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof AuthenticatedPostsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/api-keys': {
      id: '/_authenticated/api-keys'
      path: '/api-keys'
      fullPath: '/api-keys'
      preLoaderRoute: typeof AuthenticatedApiKeysRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings/profile': {
      id: '/_authenticated/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthenticatedSettingsProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/api-keys': {
      id: '/_authenticated/settings/api-keys'
      path: '/api-keys'
      fullPath: '/settings/api-keys'
      preLoaderRoute: typeof AuthenticatedSettingsApiKeysRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
  }
}

interface AuthenticatedSettingsRouteChildren {
  AuthenticatedSettingsApiKeysRoute: typeof AuthenticatedSettingsApiKeysRoute
  AuthenticatedSettingsProfileRoute: typeof AuthenticatedSettingsProfileRoute
}

const AuthenticatedSettingsRouteChildren: AuthenticatedSettingsRouteChildren = {
  AuthenticatedSettingsApiKeysRoute: AuthenticatedSettingsApiKeysRoute,
  AuthenticatedSettingsProfileRoute: AuthenticatedSettingsProfileRoute,
}

const AuthenticatedSettingsRouteWithChildren =
  AuthenticatedSettingsRoute._addFileChildren(
    AuthenticatedSettingsRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  AuthenticatedApiKeysRoute: AuthenticatedApiKeysRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedPostsRoute: AuthenticatedPostsRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
